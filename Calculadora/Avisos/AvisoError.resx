<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnaceptar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAQYSURBVFhH7ZL9T1NXGMdPAiHIlDZtrPqDMUYl/qRZsjS2
        dd0yTVppgba20JZSWgUt0BdKKRUBYSDDJSMzOkwWddmL2dQBbWkpb/KOCPEv2F+gydh1WbZswbpn55ye
        O0GR6QYs2fwkn6S3vc/5fp/bi17zv2GTe1MRciEJu9xYttZtdbdMtDwquF7w3YaXIOENYw1c5/1OIGqu
        ajauhDgg9oRGQ9yF+QvA2zHfAeqr6vUvQcIDwwHu/L3zQGy710ZtnW2lHv306PqVIOH+IT/XcrcFmu82
        w7mZc3/aNNMEjTON0DjdCMou5X02snaQcPeAm2uYboCz02ehfqqeembqDDU0FYLQZAj8A/4fZSqZlI09
        Qwl6g316JcS1Yq8r4eLqJusgOBmE4EQQaidqITARgMB4yprxGvAkPD/JNDI5G1vOZs9mo/qa+vvMqkwl
        ++qlEAVEvrJ4GUcCiP4xP1SPVYNvzAe+UR94R73Uyv7Kn+W58pXPFvgFhc6oc4FsYOmxPEyvTD/MfloV
        YUDoc8QcnGfUA+47bmrVnSpq5UglVIxUgGvEBeXx8l/kefL32NhyBD5BkT1iX6Dtx1PtTbdMD9Pd6Qp2
        y4qIgiKfLWLjSADx9PBp6qnhU1A+VA5lQ2VUZ9z5q6xApmJjy8n2ZpttYdsC2YCX30L3je6FJUS1ompr
        2MrxQScHT8KJwRNU56ATnANOcAw4oCRa8ptML9OyseWQcHO3+QfymHhdw6lN+C20N7QPni1Bwk29Jo4E
        lA6UQmmiFOwJO5QkSqi2fhsU9xeDJWJZlBlkejb2PHve3zOLQ5JLHxfZhN+G30L1lYq8E/TNFdYIq/Xf
        6jkSQoPixWCNW8ESt4A5ZqYWxYqgMFy4qDArimjQC3GgzP0d++ccCUeSboIlm9Bt+p9uQjzy+ZEHgoCg
        K/92/iMaECtM2VcIpj4THI8eB1W3ChRfK+DAZwcWdyh3GFjKX4BL7GvfN2eNWZN0k1hqExrCDicao0Yw
        hA2PDRED6CN60EV0UBAuoIE513Jg+5XtIOmSgOSyJJnxZoaRnf6S4BJ72/fO4aCksc9ItyEaoqmwpYH5
        4XxQ3lRCzvUcEH8iBuFl4VMvCZ9kvJVhYae+IrjE7vbd87qwLskH5fXmgbZXS9X0akB6QwrbrmyDrItZ
        z/tx1pM0aZqdnfY3wSV2te2ay+3JTR7rOQbqbjX9Xw9+cRCyL2VDWmfayn6U9js6hMrYKf8QXGJn6845
        1S1VUvqlFAQXBYA+RKt7CFWw6TUCl9hSv2UWtaPH6AMcsJpy5GVTawwugarRDGrFJdpw0EoeRgF29zpB
        SvhwiWZcogUHLvVtVM/uWmf4Ek24RBMOJr6LK2wopIQbl6jHJd7Bb8a/AilRgYLs6jX/BRD6AwlgmK1M
        3DYKAAAAAElFTkSuQmCC
</value>
  </data>
</root>