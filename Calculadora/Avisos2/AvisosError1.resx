<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnaceptar2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAABBhJREFUWEftkv1PU1cYx08CIciUNm2s+oMxRiX+pFmyNLZ13TJNWmmBtrbQllJa
        BS3QF0opFQFhIMMlIzM6TBZ12YvZ1AFtaSlv8o4I8S/YX6DJ2HVZtmzBumfnnJ47QZHpBizZ/CSfpLe9
        z/l+n9uLXvO/YZN7UxFyIQm73Fi21m11t0y0PCq4XvDdhpcg4Q1jDVzn/U4gaq5qNq6EOCD2hEZD3IX5
        C8DbMd8B6qvq9S9BwgPDAe78vfNAbLvXRm2dbaUe/fTo+pUg4f4hP9dytwWa7zbDuZlzf9o00wSNM43Q
        ON0Iyi7lfTaydpBw94Cba5hugLPTZ6F+qp56ZuoMNTQVgtBkCPwD/h9lKpmUjT1DCXqDfXolxLViryvh
        4uom6yA4GYTgRBBqJ2ohMBGAwHjKmvEa8CQ8P8k0MjkbW85mz2aj+pr6+8yqTCX76qUQBUS+sngZRwKI
        /jE/VI9Vg2/MB75RH3hHvdTK/sqf5bnylc8W+AWFzqhzgWxg6bE8TK9MP8x+WhVhQOhzxBycZ9QD7jtu
        atWdKmrlSCVUjFSAa8QF5fHyX+R58vfY2HIEPkGRPWJfoO3HU+1Nt0wP093pCnbLioiCIp8tYuNIAPH0
        8GnqqeFTUD5UDmVDZVRn3PmrrECmYmPLyfZmm21h2wLZgJffQveN7oUlRLWiamvYyvFBJwdPwonBE1Tn
        oBOcA05wDDigJFrym0wv07Kx5ZBwc7f5B/KYeF3DqU34LbQ3tA+eLUHCTb0mjgSUDpRCaaIU7Ak7lCRK
        qLZ+GxT3F4MlYlmUGWR6NvY8e97fM4tDkksfF9mE34bfQvWVirwT9M0V1gir9d/qORJCg+LFYI1bwRK3
        gDlmphbFiqAwXLioMCuKaNALcaDM/R375xwJR5JugiWb0G36n25CPPL5kQeCgKAr/3b+IxoQK0zZVwim
        PhMcjx4HVbcKFF8r4MBnBxZ3KHcYWMpfgEvsa983Z41Zk3STWGoTGsIOJxqjRjCEDY8NEQPoI3rQRXRQ
        EC6ggTnXcmD7le0g6ZKA5LIkmfFmhpGd/pLgEnvb987hoKSxz0i3IRqiqbClgfnhfFDeVELO9RwQfyIG
        4WXhUy8Jn2S8lWFhp74iuMTu9t3zurAuyQfl9eaBtldL1fRqQHpDCtuubIOsi1nP+3HWkzRpmp2d9jfB
        JXa17ZrL7clNHus5BupuNf1fD35xELIvZUNaZ9rKfpT2OzqEytgp/xBcYmfrzjnVLVVS+qUUBBcFgD5E
        q3sIVbDpNQKX2FK/ZRa1o8foAxywmnLkZVNrDC6BqtEMasUl2nDQSh5GAXb3OkFK+HCJZlyiBQcu9W1U
        z+5aZ/gSTbhEEw4mvosrbCikhBuXqMcl3sFvxr8CKVGBguzqNf8FEPoDCWCYrUzcNgoAAAAASUVORK5C
        YII=
</value>
  </data>
</root>